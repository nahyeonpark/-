import java.io.*;
import java.util.*;

public class Main {
    static Scanner scan = new Scanner(System.in);
    static StringBuilder sb = new StringBuilder();
	
    static ArrayList<Integer>[] a;
    static boolean visited[];
    
    static void dfs(int x) {
    	
    	visited[x] = true;
    	sb.append(x).append(" ");
    	
    	for(int y : a[x]) {
    		if(visited[y]) continue;
    		
    		dfs(y);
    		
    	}
    }
    
    static void bfs(int start) {
    	Queue<Integer> que = new LinkedList<>();
    	
    	que.add(start);
    	visited[start] = true;
    	
    	while(!que.isEmpty()) {
    		int x = que.poll();
    		sb.append(x).append(" ");
    		
    		for(int y : a[x]) {
    			if(visited[y]) continue;
    			
    			que.add(y);
    			visited[y] = true;
    		}
    	}
    }
        
    public static void main(String[] args) {
    	int n = scan.nextInt();
    	int m = scan.nextInt();
    	int v = scan.nextInt();
    	
    	a = new ArrayList[n+1];
    	visited = new boolean[n+1];
    	
    	for(int i = 1; i <= n; i++) {
    		a[i] = new ArrayList<Integer>();
    	}
    	
		for(int i = 1; i <= m; i++) {
			int x = scan.nextInt();
			int y = scan.nextInt();
			a[x].add(y);
			a[y].add(x);
		}
		
		for(int i = 1; i <= n; i++) {
    		Collections.sort(a[i]);
    	}
		
		dfs(v);
		sb.append("\n");
		Arrays.fill(visited, false);
		bfs(v);
		sb.append("\n");
		
		System.out.println(sb.toString());
    }
}
